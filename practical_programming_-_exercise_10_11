from typing import Dict

def db_consistent(dict_of_dict: Dict[str, dict]) -> bool:
    """ (dict of {str: dict}) -> bool

    Return True iff every one of the inner dictionaries of dict_of_dict
    contains exactly the same keys.

    >>> db_consistent({'A': {1: 'a', 2: 'b'}, 'B': {2: 'c', 3: 'd'}})
    False
    >>> db_consistent({'A': {1: 'a', 2: 'b'}, 'B': {1: 'c', 2: 'd'}})
    True
    """

    keys = set()

    # Create a set of all keys appearing in inner dictionaries.
    for inner_dict in dict_of_dict.values():
        keys.update(inner_dict.keys())

    # Return False if either inner dictionary differs from the set
    # of all keys.
    for inner_dict in dict_of_dict.values():
        if inner_dict.keys() != keys:
            return False
    
    return True
